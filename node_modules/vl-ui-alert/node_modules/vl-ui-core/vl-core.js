(()=>{function t(){var t=document.createElement("link");return t.setAttribute("id",e),t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","/node_modules/vl-ui-core/style.css"),t}const e="vl-core-style";!function(){if(!document.head.querySelector("#"+e)){var s=t();document.head.appendChild(s)}}()})();export const VlElement=SuperClass=>class extends SuperClass{constructor(html){super();if(html){this.__shadow(html)}}static get observedAttributes(){return this._observedAttributes.concat(this._observedClassAttributes).concat(this._observedChildClassAttributes)}attributeChangedCallback(attr,oldValue,newValue){if(this.constructor._observedClassAttributes){this.constructor._observedClassAttributes.filter(attribute=>{return attribute==attr}).forEach(attribute=>{this._changeAttribute(this,oldValue,newValue,attribute)})}if(this.constructor._observedChildClassAttributes){this.constructor._observedChildClassAttributes.filter(attribute=>{return attribute==attr}).forEach(attribute=>{this._changeAttribute(this._element,oldValue,newValue,attribute)})}const callback=this["_"+attr+"ChangedCallback"];if(callback){callback.call(this,oldValue,newValue)}else if((!this.constructor._observedClassAttributes||this.constructor._observedClassAttributes.indexOf(attr)==-1)&&(!this.constructor._observedChildClassAttributes||this.constructor._observedChildClassAttributes.indexOf(attr)==-1)){console.info("_"+attr+"ChangedCallback is not defined")}}get _classPrefix(){console.error("class prefix is undefined")}get _element(){return this._shadow.lastElementChild}_template(html){const template=document.createElement("template");template.innerHTML=html;return template.content}_changeClass(element,oldValue,newValue,classPrefix){if(element.classList.contains((classPrefix||this._classPrefix)+oldValue)){element.classList.remove((classPrefix||this._classPrefix)+oldValue)}element.classList.add((classPrefix||this._classPrefix)+newValue)}_changeAttribute(element,oldValue,newValue,attribute,classPrefix){if(oldValue!=newValue){if(this.getAttribute(attribute)!=undefined){element.classList.add((classPrefix||this._classPrefix)+attribute)}else{element.classList.remove((classPrefix||this._classPrefix)+attribute)}}}__shadow(html){this._shadow=this.attachShadow({mode:"open"});this._shadow.innerHTML=html}};